// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc810.BullseyeNew;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveFrontRight;
    public static SpeedController driveFrontLeft;
    public static SpeedController driveBackLeft;
    public static SpeedController driveBackRight;
    public static RobotDrive driveRobotDrive;
    public static SpeedController winchWinch;
    public static Solenoid armUpDown;
    public static Solenoid armGrabPiston;
    public static Compressor armCompressor;
    public static Solenoid armArmHolder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveFrontRight = new Victor(2);
        LiveWindow.addActuator("Drive", "FrontRight", (Victor) driveFrontRight);
        
        driveFrontLeft = new Victor(0);
        LiveWindow.addActuator("Drive", "FrontLeft", (Victor) driveFrontLeft);
        
        driveBackLeft = new Victor(1);
        LiveWindow.addActuator("Drive", "BackLeft", (Victor) driveBackLeft);
        
        driveBackRight = new Victor(3);
        LiveWindow.addActuator("Drive", "BackRight", (Victor) driveBackRight);
        
        driveRobotDrive = new RobotDrive(driveFrontLeft, driveBackLeft,
              driveFrontRight, driveBackRight);
        
        driveRobotDrive.setSafetyEnabled(true);
        driveRobotDrive.setExpiration(0.1);
        driveRobotDrive.setSensitivity(0.5);
        driveRobotDrive.setMaxOutput(1.0);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        winchWinch = new Victor(4);
        LiveWindow.addActuator("Winch", "Winch", (Victor) winchWinch);
        
        armUpDown = new Solenoid(1, 4);
        LiveWindow.addActuator("Arm", "UpDown", armUpDown);
        
        armGrabPiston = new Solenoid(1, 5);
        LiveWindow.addActuator("Arm", "GrabPiston", armGrabPiston);
        
        armCompressor = new Compressor(1);
        
        
        armArmHolder = new Solenoid(1, 2);
        LiveWindow.addActuator("Arm", "ArmHolder", armArmHolder);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
